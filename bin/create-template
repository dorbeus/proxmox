#!/bin/bash

CTID="$1"
NAME="$2"
DEFAULTNAME="template-`date +%F`.tar.gz"
CTDIR="/var/lib/vz/private"
TEMPLATEDIR="/var/lib/vz/template/cache"

print_usage(){
	echo "Usage: $0 <CT ID> <archive name>"
	echo "Example: $0 100 ubuntu-12.04-standard_12.04_amd64.tar.gz"
}

# testing to see if the arguments exist before going any further
if [ -z $CTID ]
then
	echo "CTID is not set."
	print_usage
	exit 1
fi

# Testing $CTID
if [ ! $CTID -ge 100 ]
then
	echo "Enter a CTID of 100 or greater."
	print_usage
	exit 1
fi

# test to see if the VM exists
echo "Testing for valid VM ID."
if [ ! -d "$CTDIR/$CTID" ]
then
	echo "The VM $CTID, does not exist. Please enter a valid VM ID."
	print_usage
	exit 1
fi

# testing $NAME
# testing to see if the arguments exist before going any further
if [ -z "$NAME" ]
then
	echo "NAME is not set."
	echo "Using default name $DEFAULTNAME"
	NAME=$DEFAULTNAME
else
	echo "Testing for valid archive name."
	if [[ "$NAME" != *".tar.gz" ]]
	then
		echo "Enter an archive/template name ending in '.tar.gz'"
		print_usage
		exit 1;
	fi
fi

# go to template directory
cd "$CTDIR/$CTID"

echo "Backup old template file"
if [ -e "$TEMPLATEDIR/$NAME" ] && [ -e "$TEMPLATEDIR/$NAME.old" ]
then
	rm "$TEMPLATEDIR/$NAME.old"
fi

if [ -e "$TEMPLATEDIR/$NAME" ]
then
	mv "$TEMPLATEDIR/$NAME" "$TEMPLATEDIR/$NAME.old"
fi

# check to see if VM is running, if so do nothing, if not start VM
CTSTATUS=`vzctl status $CTID`
if [[ ! "$CTSTATUS" == "*running" ]]                    
then                  
	vzctl start $CTID
fi

# use apt to remove some unecessary files
vzctl exec $CTID 'apt-get autoremove'
vzctl exec $CTID 'apt-get autoclean'
vzctl exec $CTID 'apt-get clean'
# remove logs from /var/log
vzctl exec $CTID 'find /var/log -type f -delete'

#remove any ip address
vzctl set $CTID --ipdel all --save
vzctl stop $CTID

echo "Preapring fresh ssh keys"
sleep 2

cd "$CTDIR/$CTID"

#Generate a unique set of ssh (host) keys.
rm -f etc/ssh/ssh_host_*

cat << EOF > etc/rc2.d/S15ssh_gen_host_keys
#!/bin/sh
ssh-keygen -f /etc/ssh/ssh_host_rsa_key -t rsa -N ''
ssh-keygen -f /etc/ssh/ssh_host_dsa_key -t dsa -N ''
ssh-keygen -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key -N ''
rm -f \$0
EOF

chmod +x etc/rc2.d/S15ssh_gen_host_keys 

echo "Start creating Template"
sleep 5

tar -czf "$TEMPLATEDIR/$NAME" .

echo "Done Packing up the tar archive"
sleep 3

echo "Done creating the template"
sleep 2

