#!/bin/bash
# source: https://help.ubuntu.com/12.04/installation-guide/powerpc/linux-upgrade.html
# source: http://blog.bodhizazen.net/linux/ubuntu-10-04-openvz-templates/

CTID=900
USER=pklan.notification
EMAIL=$USER@gmail.com
PASS="password"

main(){
	debootstrap
#	createct
#	ct-config-apt
#	syslog
#	locales
#	resolvconf
#	unattended-upgrades
#	email
#	fail2ban
#	cleanup					
}

debootstrap(){
	# install debootstrap from ubuntu deb
	wget http://archive.ubuntu.com/ubuntu/pool/main/d/debootstrap/debootstrap_1.0.42_all.deb
	dpkg -i debootstrap_1.0.42_all.deb
	rm debootstrap_1.0.42_all.deb

	# create a directory in which you wish to install ubuntu.
	workingdir=/root/ubuntu-12.04-amd64_openvz-template
	mkdir $workingdir

	# install ubuntu base to $workingdir
	/usr/sbin/debootstrap --arch amd64 precise $workingdir

	# go to working dir and create a tar.gz of it for use with a template
	cd $workingdir

	# this tar.gz can then be uploaded to the proxmox server as a new template.
	tar -czvf /root/ubuntu-12.04-amd64_openvz.tar.gz .

	# copy to proxmox template cache
	cp /root/ubuntu-12.04-amd64_openvz.tar.gz /var/lib/vz/template/cache/
}

createct(){
	# create new template CT
	vzctl create $CTID --ostemplate ubuntu-12.04-amd64_openvz-template
	vzctl set $CTID --onboot yes --save
	vzctl set $CTID --ipadd 10.13.37.253 --save
	vzctl set $CTID --nameserver 10.13.37.1 --save
	vzctl set $CTID --hostname template --save
	vzctl set $CTID --diskspace 4G:5G --save
	vzctl start $CTID
}

ct-config-apt(){
	# configure apt
read -r -d '' VAR <<'END'
cat > /etc/apt/sources.list <<EOF
deb http://archive.ubuntu.com/ubuntu precise main restricted universe
deb http://archive.ubuntu.com/ubuntu precise-updates main restricted universe
deb http://archive.ubuntu.com/ubuntu precise-security main restricted universe
EOF
END

echo "$VAR" | vzctl exec $CTID -

	# full upgrade
	vzctl exec $CTID "apt-get update"
	vzctl exec $CTID "apt-get dist-upgrade -y"

	# install tasksel and standard server files
	vzctl exec $CTID "apt-get install tasksel -y"
	vzctl exec $CTID "tasksel install standard"
	vzctl exec $CTID "apt-get install ssh -y"
}

syslog(){
	# rsyslog cause the cpu to go to 100% :(
	vzctl exec $CTID "apt-get install syslog-ng -y"
	vzctl exec $CTID "apt-get remove rsyslog -y"

	# fix for logrotate and syslog-ng
	vzctl exec $CTID "sed -i 's|#SYSLOGNG_OPTS=|SYSLOGNG_OPTS=|' /etc/default/syslog-ng"
}

locales(){
	# set locale
	vzctl exec $CTID "locale-gen en_US"
	vzctl exec $CTID "locale-gen en_US.UTF-8"
	vzctl exec $CTID "dpkg-reconfigure locales"

	# set timezone
	# dpkg-reconfigure tzdata
	vzctl exec $CTID "ln -sf /usr/share/zoneinfo/America/Chicago /etc/localtime"

	# write the local file
	vzctl exec $CTID "update-locale"
}

resolvconf(){
	# we need this to fix issues with resolv.conf for dns when the template gets created
	vzctl exec $CTID "apt-get purge resolvconf -y"
}

unattended-upgrades(){
	# install unattended upgrades
	vzctl exec $CTID "apt-get install -y unattended-upgrades update-notifier-common"

read -r -d '' VAR <<'END'
cat > /etc/apt/apt.conf.d/10periodic <<EOF
APT::Periodic::Update-Package-Lists "1";
APT::Periodic::Download-Upgradeable-Packages "1";
APT::Periodic::AutocleanInterval "7";
APT::Periodic::Unattended-Upgrade "1";
EOF
END
echo "$VAR" | vzctl exec $CTID -

	vzctl exec $CTID "cp /etc/apt/apt.conf.d/50unattended-upgrades /etc/apt/apt.conf.d/unattended-upgrades.50.bak"

read -r -d '' VAR <<'END'
cat > /etc/apt/apt.conf.d/50unattended-upgrades <<EOF
Unattended-Upgrade::Allowed-Origins {
        "\${distro_id}:\${distro_codename}-security";
        "\${distro_id}:\${distro_codename}-updates";
//      "\${distro_id}:\${distro_codename}-proposed";
//      "\${distro_id}:\${distro_codename}-backports";
};
Unattended-Upgrade::Package-Blacklist {
//      "libc6";
};

Unattended-Upgrade::AutoFixInterruptedDpkg "true";
Unattended-Upgrade::Mail "root@localhost";
Unattended-Upgrade::MailOnlyOnError "true";
Unattended-Upgrade::Remove-Unused-Dependencies "false";
Unattended-Upgrade::Automatic-Reboot "false";
EOF
END
echo "$VAR" | vzctl exec $CTID -
}

email(){
	# sending email alerts
	vzctl exec $CTID "apt-get install ssmtp -y"

read -r -d '' VAR <<'END'
cat > /etc/ssmtp/ssmtp.conf <<EOF
root=$EMAIL
mailhub=smtp.gmail.com:587
rewriteDomain=pklan.org
hostname=$EMAIL
UseSTARTTLS=YES
AuthUser=$USER
AuthPass=$PASS
FromLineOverride=YES
EOF
END
echo "$VAR" | vzctl exec $CTID -
	
	vzctl exec $CTID "chmod 640 /etc/ssmtp/ssmtp.conf"

read -r -d '' VAR <<'END'
cat > /etc/ssmtp/revaliases <<EOF
root:$EMAIL:smtp.gmail.com:587
EOF
END
	echo "$VAR" | vzctl exec $CTID -
}

fail2ban(){
	# Install fail2ban
	vzctl exec $CTID "apt-get install fail2ban -y"

read -r -d '' VAR <<'END'
cat > /etc/fail2ban/jail.local <<EOF
[DEFAULT]
ignoreip = 127.0.0.1/8 $IP
bantime  = 600
maxretry = 3
backend = auto
destemail = root@localhost
banaction = iptables-multiport
mta = sendmail
protocol = tcp
chain = INPUT

action_ = %(banaction)s[name=%(__name__)s, port="%(port)s", protocol="%(protocol)s", chain="%(chain)s"]
action_mw = %(banaction)s[name=%(__name__)s, port="%(port)s", protocol="%(protocol)s", chain="%(chain)s"]
              %(mta)s-whois[name=%(__name__)s, dest="%(destemail)s", protocol="%(protocol)s", chain="%(chain)s"]
action_mwl = %(banaction)s[name=%(__name__)s, port="%(port)s", protocol="%(protocol)s", chain="%(chain)s"]
               %(mta)s-whois-lines[name=%(__name__)s, dest="%(destemail)s", logpath=%(logpath)s, chain="%(chain)s"]
action = %(action_)s

[ssh]
enabled  = true
port     = ssh
filter   = sshd
logpath  = /var/log/auth.log
maxretry = 6
EOF
END
echo "$VAR" | vzctl exec $CTID -
	# restart fail2ban
	vzctl exec $CTID "/etc/init.d/fail2ban restart"
}

cleanup(){
	# remove unnecessary files
	vzctl exec $CTID "apt-get autoremove"
	vzctl exec $CTID "apt-get autoclean"
	vzctl exec $CTID "apt-get clean"
	# clear logs

}

createtemplate(){
	vzctl set $CTID --ipdel all --save
	vzctl stop $ID
	cd /var/lib/vz/private/$CTID/
	mkdir /root/template
	rsync -avz /var/lib/vz/private/$CTID/ /root/template/
	rm /root/template/aquota*
	tar -czvf /root/ubuntu-12.04-x86_64_`date "+%Y%m%d`.tar.gz /root/template/
}

main
